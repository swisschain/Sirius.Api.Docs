syntax = "proto3";

option csharp_namespace = "Swisschain.Sirius.Api.ApiContract.V2.SmartContracts";

import "common.proto";
import "smart_connect.data_model.proto";
import "smart_contracts.common.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

package swisschain.sirius.api.v2.smart_contracts;

service SmartContractService {
  rpc Invoke (SmartContractInvokeRequest) returns (SmartContractInvokeResponse);
}

// Invoke
message SmartContractInvokeRequest {
  string idempotency_id = 1;
  SmartContractInvocationDocument document = 2;
  bytes signature = 3;
  int64 smart_contract_id = 4;
  string name = 5;
}

message SmartContractInvocationDocument {
  int64 broker_account_id = 1;
  string method_name = 2;
  google.protobuf.StringValue method_address = 3;
  repeated swisschain.sirius.api.smart_connect.data_model.Argument arguments = 4;
  swisschain.sirius.api.smart_contracts.common.Payment payment = 5;
  google.protobuf.StringValue reference_id = 6;
  map<string,string> properties = 7;
}

message SmartContractInvokeResponse {
  oneof kind {
    SmartContractInvokePayload payload = 1;
    SmartContractInvokeError error = 2;
  }
}

message SmartContractInvokePayload {
  int64 id = 1;
}

message SmartContractInvokeError {
  enum ErrorCode {
    UNKNOWN = 0;
    INVALID_PARAMETERS = 1;
    DOMAIN_PROBLEM = 2;
    TECHNICAL_PROBLEM = 3;
    NOT_AUTHORIZED = 4;
    NOT_ENOUGH_BALANCE = 5;
  }

  ErrorCode code = 1;
  string message = 2;
}
